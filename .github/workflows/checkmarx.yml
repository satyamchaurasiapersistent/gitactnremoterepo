# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This is a basic workflow to help you get started with Using Checkmarx CxFlow Action

name: CxFlow

on: [push]
  #schedule:
   # - cron: $cron-weekly

# A workflow run is made up of one or more jobs that can run sequentially or in parallel - this job is specifically configured to use the Checkmarx CxFlow Action
permissions:
  contents: read

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on - Ubuntu is required as Docker is leveraged for the action
  #  permissions:
  #    contents: read # for actions/checkout to fetch code
  #    issues: write # for checkmarx-ts/checkmarx-cxflow-github-action to write feedback to github issues
  #    pull-requests: write # for checkmarx-ts/checkmarx-cxflow-github-action to write feedback to PR
  #    security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
 #     actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest
   

    # Steps require - checkout code, run CxFlow Action, Upload SARIF report (optional)
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    # Runs the Checkmarx Scan leveraging the latest version of CxFlow - REFER to Action README for list of inputs
   # - name: Installation Of Certificate
    #  run: |          
     #    ls -la
      #   sudo $JAVA_HOME/bin/keytool -import -alias sastcer -storepass changeit -keystore   $JAVA_HOME/lib/security/cacerts -file checkmarx.crt --noprompt

    - name: Checkmarx CxFlow Action
      id: step1
    #  uses: checkmarx-ts/checkmarx-cxflow-github-action@v1.7
      uses: satyamchaurasiapersistent/checkmarx-cxflow-github-action@10cfe141eaccce9ed99f1d7e7853bc06d144a0e1
      #checkmarx-ts/checkmarx-cxflow-github-action@v1.7
      env:
        CHECKMARX_CLIENT_ID : "resource_owner_sast_client"
        CHECKMARX_SCOPE : "access_control_api sast_api"
        CHECKMARX_URLL : "https://sast94.cxquality.com"
        CX_FLOW_ZIP_EXCLUDE : "\\.git/.*, \\.github/.*"
      with:
        project: ${{ github.repository }}
        team: "CxServer"
        #team: ${{ secrets.CHECKMARX_TEAMS }}
        checkmarx_url:  ${{ env.CHECKMARX_URLL }}
        checkmarx_username: ${{ secrets.CHECKMARX_USERNAME }}
        checkmarx_password: ${{ secrets.CHECKMARX_PASSWORD }}
        checkmarx_client_secret: ${{ secrets.CHECKMARX_CLIENT_SECRET }}
        incremental: false
        break_build: false
        scanners: sast
        bug_tracker: Sarif
        extra_certificates: certificate
        jvmkeytool_path: /usr/lib/jvm/java-1.8-openjdk/jre/lib/security/cacerts
        params: --checkmarx.version=9.5 --checkmarx.settings-override=true --checkmarx.restrict-results-to-branch=true --namespace=${{ github.repository_owner }} --repo-name=${{ github.event.repository.name }} --branch=main --cx-flow.filterSeverity --cx-flow.filterCategory  --checkmarx.disable-clubbing=true
    - name: From Entry Point SH
      run: |
        echo "asdasdasdasdsadas"
        #echo "The SCAN ID :  ${{ steps.step1.outputs.cxflowscanid }}"
  
#  job2:
 #   runs-on: satyamm
  #  needs: build
   # steps:
    #  - run: |
     #     echo "${{needs.build.outputs.output1}}"
  #job3:
   # runs-on: satyamm
    #needs: build
    #steps:
     # - run: |
      #    echo "${{needs.build.outputs.output2}}"     
